openapi: 3.0.0
info:
  title: E-commerce API
  version: 1.0.0
  description: API documentation for the E-commerce application

servers:
  - url: http://localhost:3000
    description: Development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    CookieAuth:
      type: apiKey
      in: cookie
      name: accessToken

  schemas:
    RegisterInput:
      type: object
      required:
        - name
        - age
        - email
        - password
        - phone
      properties:
        name:
          type: string
          minLength: 2
        age:
          type: integer
          minimum: 13
          maximum: 120
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
        phone:
          type: string
          minLength: 10
          maxLength: 15

    LoginInput:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6

    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        age:
          type: integer
        phone:
          type: string

    Error:
      type: object
      properties:
        message:
          type: string

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterInput"
      responses:
        "201":
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginInput"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
          headers:
            Set-Cookie:
              schema:
                type: string
                example: accessToken=xxx; HttpOnly; Max-Age=900
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user profile
      security:
        - BearerAuth: []
        - CookieAuth: []
      responses:
        "200":
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/refresh:
    get:
      tags:
        - Authentication
      summary: Refresh access token
      responses:
        "200":
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          headers:
            Set-Cookie:
              schema:
                type: string
                example: accessToken=xxx; HttpOnly; Max-Age=900
        "401":
          description: Invalid refresh token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/logout:
    get:
      tags:
        - Authentication
      summary: Logout user
      security:
        - BearerAuth: []
        - CookieAuth: []
      responses:
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          headers:
            Set-Cookie:
              schema:
                type: string
                example: accessToken=; HttpOnly; Max-Age=0
